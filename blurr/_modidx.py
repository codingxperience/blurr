# Autogenerated by nbdev

d = { 'settings': { 'branch': 'dev-3.0.0 #master',
                'doc_baseurl': '/blurr/',
                'doc_host': 'https://ohmeow.github.io',
                'git_url': 'https://github.com/ohmeow/blurr/',
                'lib_path': 'blurr'},
  'syms': { 'blurr.callbacks': { 'blurr.callbacks.CheckpointingNotSupported': ( 'callbacks.html#checkpointingnotsupported',
                                                                                'blurr/callbacks.py'),
                                 'blurr.callbacks.CheckpointingNotSupported.__init__': ( 'callbacks.html#checkpointingnotsupported.__init__',
                                                                                         'blurr/callbacks.py'),
                                 'blurr.callbacks.GradientCheckpointing': ('callbacks.html#gradientcheckpointing', 'blurr/callbacks.py'),
                                 'blurr.callbacks.GradientCheckpointing.after_fit': ( 'callbacks.html#gradientcheckpointing.after_fit',
                                                                                      'blurr/callbacks.py'),
                                 'blurr.callbacks.GradientCheckpointing.before_fit': ( 'callbacks.html#gradientcheckpointing.before_fit',
                                                                                       'blurr/callbacks.py'),
                                 'blurr.callbacks.GradientCheckpointing.supported': ( 'callbacks.html#gradientcheckpointing.supported',
                                                                                      'blurr/callbacks.py')},
            'blurr.core': {},
            'blurr.text.core': { 'blurr.text.core.BaseModelCallback': ('text-core.html#basemodelcallback', 'blurr/text/core.py'),
                                 'blurr.text.core.BaseModelCallback.__init__': ( 'text-core.html#basemodelcallback.__init__',
                                                                                 'blurr/text/core.py'),
                                 'blurr.text.core.BaseModelCallback.after_create': ( 'text-core.html#basemodelcallback.after_create',
                                                                                     'blurr/text/core.py'),
                                 'blurr.text.core.BaseModelCallback.after_loss': ( 'text-core.html#basemodelcallback.after_loss',
                                                                                   'blurr/text/core.py'),
                                 'blurr.text.core.BaseModelCallback.after_pred': ( 'text-core.html#basemodelcallback.after_pred',
                                                                                   'blurr/text/core.py'),
                                 'blurr.text.core.BaseModelCallback.before_batch': ( 'text-core.html#basemodelcallback.before_batch',
                                                                                     'blurr/text/core.py'),
                                 'blurr.text.core.BaseModelWrapper': ('text-core.html#basemodelwrapper', 'blurr/text/core.py'),
                                 'blurr.text.core.BaseModelWrapper.__init__': ( 'text-core.html#basemodelwrapper.__init__',
                                                                                'blurr/text/core.py'),
                                 'blurr.text.core.BaseModelWrapper.forward': ( 'text-core.html#basemodelwrapper.forward',
                                                                               'blurr/text/core.py'),
                                 'blurr.text.core.BatchDecodeTransform': ('text-core.html#batchdecodetransform', 'blurr/text/core.py'),
                                 'blurr.text.core.BatchDecodeTransform.__init__': ( 'text-core.html#batchdecodetransform.__init__',
                                                                                    'blurr/text/core.py'),
                                 'blurr.text.core.BatchDecodeTransform.decodes': ( 'text-core.html#batchdecodetransform.decodes',
                                                                                   'blurr/text/core.py'),
                                 'blurr.text.core.Learner.blurr_generate': ('text-core.html#learner.blurr_generate', 'blurr/text/core.py'),
                                 'blurr.text.core.Learner.blurr_predict': ('text-core.html#learner.blurr_predict', 'blurr/text/core.py'),
                                 'blurr.text.core.TextCollatorWithPadding': ( 'text-core.html#textcollatorwithpadding',
                                                                              'blurr/text/core.py'),
                                 'blurr.text.core.TextCollatorWithPadding.__call__': ( 'text-core.html#textcollatorwithpadding.__call__',
                                                                                       'blurr/text/core.py'),
                                 'blurr.text.core.TextCollatorWithPadding.__init__': ( 'text-core.html#textcollatorwithpadding.__init__',
                                                                                       'blurr/text/core.py'),
                                 'blurr.text.core.TextCollatorWithPadding._build_batch': ( 'text-core.html#textcollatorwithpadding._build_batch',
                                                                                           'blurr/text/core.py'),
                                 'blurr.text.core.TextCollatorWithPadding._build_input_labels': ( 'text-core.html#textcollatorwithpadding._build_input_labels',
                                                                                                  'blurr/text/core.py'),
                                 'blurr.text.core.TextCollatorWithPadding._build_inputs_d': ( 'text-core.html#textcollatorwithpadding._build_inputs_d',
                                                                                              'blurr/text/core.py'),
                                 'blurr.text.core.TextCollatorWithPadding._proc_targets': ( 'text-core.html#textcollatorwithpadding._proc_targets',
                                                                                            'blurr/text/core.py'),
                                 'blurr.text.core.TextDataLoader': ('text-core.html#textdataloader', 'blurr/text/core.py'),
                                 'blurr.text.core.TextDataLoader.__init__': ( 'text-core.html#textdataloader.__init__',
                                                                              'blurr/text/core.py'),
                                 'blurr.text.core.TextDataLoader.new': ('text-core.html#textdataloader.new', 'blurr/text/core.py'),
                                 'blurr.text.core.TextInput': ('text-core.html#textinput', 'blurr/text/core.py'),
                                 'blurr.text.core.blurr_params': ('text-core.html#blurr_params', 'blurr/text/core.py'),
                                 'blurr.text.core.blurr_splitter': ('text-core.html#blurr_splitter', 'blurr/text/core.py'),
                                 'blurr.text.core.first_blurr_tfm': ('text-core.html#first_blurr_tfm', 'blurr/text/core.py'),
                                 'blurr.text.core.get_blurr_tfm': ('text-core.html#get_blurr_tfm', 'blurr/text/core.py'),
                                 'blurr.text.core.show_batch': ('text-core.html#show_batch', 'blurr/text/core.py'),
                                 'blurr.text.core.show_results': ('text-core.html#show_results', 'blurr/text/core.py')},
            'blurr.utils': { 'blurr.utils.MultiTargetLoss': ('utils.html#multitargetloss', 'blurr/utils.py'),
                             'blurr.utils.MultiTargetLoss.__init__': ('utils.html#multitargetloss.__init__', 'blurr/utils.py'),
                             'blurr.utils.MultiTargetLoss.activation': ('utils.html#multitargetloss.activation', 'blurr/utils.py'),
                             'blurr.utils.MultiTargetLoss.decodes': ('utils.html#multitargetloss.decodes', 'blurr/utils.py'),
                             'blurr.utils.MultiTargetLoss.forward': ('utils.html#multitargetloss.forward', 'blurr/utils.py'),
                             'blurr.utils.MultiTargetLoss.reduction': ('utils.html#multitargetloss.reduction', 'blurr/utils.py'),
                             'blurr.utils.PreCalculatedBCELoss': ('utils.html#precalculatedbceloss', 'blurr/utils.py'),
                             'blurr.utils.PreCalculatedCrossEntropyLoss': ('utils.html#precalculatedcrossentropyloss', 'blurr/utils.py'),
                             'blurr.utils.PreCalculatedLoss': ('utils.html#precalculatedloss', 'blurr/utils.py'),
                             'blurr.utils.PreCalculatedLoss.__call__': ('utils.html#precalculatedloss.__call__', 'blurr/utils.py'),
                             'blurr.utils.PreCalculatedMSELoss': ('utils.html#precalculatedmseloss', 'blurr/utils.py'),
                             'blurr.utils.PreCalculatedMSELoss.__init__': ('utils.html#precalculatedmseloss.__init__', 'blurr/utils.py'),
                             'blurr.utils.Singleton': ('utils.html#singleton', 'blurr/utils.py'),
                             'blurr.utils.Singleton.__call__': ('utils.html#singleton.__call__', 'blurr/utils.py'),
                             'blurr.utils.Singleton.__init__': ('utils.html#singleton.__init__', 'blurr/utils.py'),
                             'blurr.utils.clean_ipython_hist': ('utils.html#clean_ipython_hist', 'blurr/utils.py'),
                             'blurr.utils.clean_memory': ('utils.html#clean_memory', 'blurr/utils.py'),
                             'blurr.utils.clean_tb': ('utils.html#clean_tb', 'blurr/utils.py'),
                             'blurr.utils.get_hf_objects': ('utils.html#get_hf_objects', 'blurr/utils.py'),
                             'blurr.utils.print_dev_environment': ('utils.html#print_dev_environment', 'blurr/utils.py'),
                             'blurr.utils.print_versions': ('utils.html#print_versions', 'blurr/utils.py'),
                             'blurr.utils.set_seed': ('utils.html#set_seed', 'blurr/utils.py'),
                             'blurr.utils.str_to_type': ('utils.html#str_to_type', 'blurr/utils.py')}}}
